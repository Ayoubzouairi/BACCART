
<!DOCTYPE html>
<html lang="ar">
<head>
  <meta charset="UTF-8" />
  <title>BACCARAT</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <style id="theme-style">
    body {
      background-color: #121212;
      color: gold;
      font-family: 'Segoe UI', Tahoma, sans-serif;
      padding: 2em;
      direction: rtl;
      text-align: center;
    }
    h1 { font-size: 2.5em; }
    .buttons button {
      padding: 0.7em 1.5em;
      font-size: 1em;
      margin: 0.5em;
      border: none;
      border-radius: 10px;
      cursor: pointer;
    }
    .player { background-color: #007bff; color: white; }
    .banker { background-color: #dc3545; color: white; }
    .tie { background-color: #28a745; color: white; }
    .reset, .toggle-theme, .toggle-sound {
      background-color: #444;
      color: gold;
      margin: 0.5em;
    }
    .result, .stats, .accuracy {
      margin-top: 1em;
      font-size: 1.2em;
    }
  </style>
</head>
<body>
  <h1>BACCARAT</h1>
  <div>
    <button class="toggle-theme" onclick="toggleTheme()">🌓 تغيير الوضع</button>
    <button class="toggle-sound" onclick="toggleSound()">🔊 تشغيل/إيقاف الصوت</button>
  </div>
  <div class="buttons">
    <button class="player" onclick="addResult('P')">🂡 اللاعب</button>
    <button class="banker" onclick="addResult('B')">🂱 المصرفي</button>
    <button class="tie" onclick="addResult('T')">🎴 تعادل</button>
  </div>
  <div class="result" id="predictionResult"></div>
  <div class="stats" id="roundStats"></div>
  <div class="accuracy" id="accuracyStats"></div>
  <button class="reset" onclick="resetGame()">🔄 إعادة تعيين</button>

  <script>
    let history = [];
    let correct = 0;
    let incorrect = 0;
    let soundEnabled = true;
    let darkTheme = true;

    function toggleTheme() {
      darkTheme = !darkTheme;
      const style = document.getElementById("theme-style");
      if (darkTheme) {
        style.innerHTML = style.innerHTML.replace(/white/g, 'gold').replace(/black/g, '#121212');
      } else {
        style.innerHTML = style.innerHTML.replace(/#121212/g, 'white').replace(/gold/g, 'black');
      }
    }

    function toggleSound() {
      soundEnabled = !soundEnabled;
      alert("الصوت: " + (soundEnabled ? "مُفعل" : "مُعطل"));
    }

    function speak(text) {
      if (!soundEnabled) return;
      const msg = new SpeechSynthesisUtterance(text);
      msg.lang = 'ar-MA';
      speechSynthesis.speak(msg);
    }

    function addResult(result) {
      const lastFive = history.slice(-5);
      const count = { P: 0, B: 0, T: 0 };
      lastFive.forEach(r => count[r]++);
      const max = Math.max(count.P, count.B, count.T);
      let prediction = count.P === max ? 'P' : count.B === max ? 'B' : 'T';

      if (prediction === result) correct++;
      else incorrect++;

      history.push(result);
      showStats(prediction, result);
    }

    function showStats(prediction, result) {
      document.getElementById("predictionResult").innerText =
        `🔮 توقع الجولة: ${prediction === 'P' ? 'اللاعب' : prediction === 'B' ? 'المصرفي' : 'تعادل'}`;
      document.getElementById("roundStats").innerText =
        `✅ صحيحة: ${correct} | ❌ خاطئة: ${incorrect}`;
      const total = correct + incorrect;
      const accuracy = total ? ((correct / total) * 100).toFixed(1) : 0;
      document.getElementById("accuracyStats").innerText =
        `🎯 دقة التوقع: ${accuracy}%`;
      speak(document.getElementById("predictionResult").innerText);
    }

    function resetGame() {
      history = [];
      correct = 0;
      incorrect = 0;
      document.getElementById("predictionResult").innerText = '';
      document.getElementById("roundStats").innerText = '';
      document.getElementById("accuracyStats").innerText = '';
    }
  </script>
</body>
</html>
